#!/bin/bash

# doing a git log and saving the values
rBranchLog=$(git log -n 10 --oneline origin/${1})
rArchiveLog=$(git log -n 10 --oneline archive/${1})

if [ "$rBranchLog" == "" ]; then
  echo -e "There is no branch on origin"   
else 
  echo -e "\n################################################### commits on branch origin/${1}"
  echo -e "$rBranchLog \n"
fi

if [ "$rArchiveLog" == "" ]; then
  echo -e "There is no archived branch"
else
  echo -e "################################################### commits on archive/${1}"
  echo -e "$rArchiveLog \n"
fi

# if there is a log generate a md5 otherwise save error value
if [ "$rBranchLog" != "" ]; then
  rBranchHash=$(echo -n $rBranchLog | openssl md5)
else
  rBranchHash='nologtomd5'
fi

# if there is a log generate a md5 otherwise save error value
if [ "$rArchiveLog" != "" ]; then
  rArchiveHash=$(echo -n $rArchiveLog | openssl md5)
else
  rArchiveHash='nologtomd5'
fi

if [ "$rBranchHash" == "nologtomd5" ] || [ "$rArchiveHash" == "nologtomd5" ]; then
  echo "Atleast one of the branches dont have a log to md5, no comparison will be made"
else
  echo -e "\nHash for remote branch:  $rBranchHash"
  echo -e "Hash for local archive:  $rArchiveHash\n"
fi

# comparing the hashes to see if the branch and the tag have the same log
if [ "$rBranchHash" == "$rArchiveHash" ]; then 
  echo 'The branch hashes are identical'
else
  echo 'The hash is different for the branches'
fi

echo -e "\n"
